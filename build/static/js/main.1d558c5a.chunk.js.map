{"version":3,"sources":["images/bg.jfif","BooksAPI.js","Book.js","BookShelf.js","LeftPanel.js","MainPage.js","SearchBook.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","books","Book","handleChange","event","console","log","_this","props","setState","value","target","onShelfUpdate","_this$props$book","this","title","authors","imageLinks","react_default","a","createElement","className","style","width","height","backgroundImage","thumbnail","onChange","disabled","selected","Component","BookShelf","_this$props","shelfFilter","map","_ref","shelfName","index","key","values","filter","src_Book","LeftPanel","href","MainPage","addBook","display","src_LeftPanel","src_BookShelf","react_router_dom","to","state","terms","SearchBook","onUpdateQuery","onLabelClick","type","placeholder","length","label","onClick","BooksApp","showSearchPage","searchResults","addBookButtonClick","backButtonClick","updateBookShelf","BooksAPI","b","catch","err","result","error","content","_this2","react_router","exact","path","element","src_MainPage","src_SearchBook","React","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.1d558c5a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.72a3c27d.jfif\";","\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, { Component } from 'react'\r\nclass Book extends Component{\r\n  handleChange = event => {\r\n    console.log(this.props.book);\r\n    this.setState({ value: event.target.value });\r\n    this.props.onShelfUpdate(this.props.book, event.target.value);\r\n  }\r\n  render(){\r\n    const { title, authors, imageLinks, shelf } = this.props.book;\r\n    console.log(this.props.book);\r\n    return (\r\n      <li>\r\n        <div className=\"book\">\r\n          <div className=\"book-top\">\r\n            <div className=\"book-cover\"\r\n              style={{width: 138,\r\n                      height: 170,\r\n                      backgroundImage: `url(${imageLinks && imageLinks.thumbnail})`\r\n                    }}>\r\n              <div title={shelf} className={\"book-tag\"+\" book-tag-\"+shelf}/>\r\n              \r\n            </div>\r\n            <div className=\"book-shelf-changer\">\r\n              <select value={shelf} onChange={this.handleChange}>\r\n                <option value=\"move\" disabled selected>Move to...</option>\r\n                <option value=\"currentlyReading\">Currently Reading</option>\r\n                <option value=\"wantToRead\">Want to Read</option>\r\n                <option value=\"read\">Read</option>\r\n                <option value=\"none\">None</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"book-title\">{title}</div>\r\n          <div className=\"book-authors\">{authors}</div>\r\n        </div>\r\n      </li>\r\n    )\r\n  }\r\n}\r\nexport default Book","import React, { Component } from 'react'\r\nimport Book from './Book'\r\n\r\nclass BookShelf extends Component{\r\n  render(){\r\n    const { books, shelfFilter } = this.props;\r\n    return (\r\n      <div className=\"list-books-content\">\r\n        {shelfFilter.map(({shelf, shelfName, index}) => (\r\n          <section id={shelf} key={index} className=\"bookshelf\">\r\n            <h2 className=\"books-row\">{shelfName}</h2>\r\n            <ol className=\"books-grid\">\r\n                {Object.values(books).filter(book => book.shelf === shelf).map((book)=>(\r\n                  <Book key={book.id} book={book} onShelfUpdate={this.props.onShelfUpdate} />\r\n                ))}\r\n            </ol>\r\n          </section>\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default BookShelf","import React from 'react'\r\nfunction LeftPanel (props) {\r\n  const { shelfFilter } = props;\r\n  return (\r\n    <div className=\"sidenav\">\r\n      {console.log(shelfFilter)}\r\n      <h1>Ivan's Bookshelf</h1>\r\n      <ul>\r\n        {shelfFilter.map(({shelf, shelfName}) => (\r\n          <li><a href={\"#\"+shelf}>{shelfName}</a></li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\nexport default LeftPanel","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport BookShelf from './BookShelf';\r\nimport LeftPanel from './LeftPanel';\r\n\r\nconst shelfFilter = [\r\n  {shelf: 'currentlyReading', shelfName: 'Currently Reading', index: 1}, \r\n  {shelf: 'wantToRead', shelfName: 'Want To Read', index: 2},\r\n  {shelf: 'read', shelfName: 'Have Read Already',index: 3}\r\n]\r\nclass MainPage extends Component {  \r\n  render() {\r\n    const { books, addBook } = this.props;\r\n    return (\r\n      <div className=\"list-books\">\r\n        {/* <div className=\"list-books-title\">\r\n          <h1>Ivan's Bookshelf</h1>\r\n        </div> */}\r\n        <div style={{display: 'flex'}}>\r\n          <LeftPanel shelfFilter={shelfFilter}/>\r\n          <BookShelf books={books} shelfFilter={shelfFilter} onShelfUpdate={this.props.onShelfUpdate}/>\r\n        </div>\r\n        <Link className=\"open-search\" to='/search' state = {{value: 'add book'}}>\r\n          <button>Add a book</button>\r\n        </Link>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default MainPage","import React from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport Book from './Book';\r\n\r\nconst terms = ['Android', 'Art', 'Artificial Intelligence', 'Astronomy', 'Austen', 'Baseball', 'Basketball', 'Bhagat', 'Biography', 'Brief', 'Business', 'Camus', 'Cervantes', 'Christie', 'Classics', 'Comics', 'Cook', 'Cricket', 'Cycling', 'Desai', 'Design', 'Development', 'Digital Marketing', 'Drama', 'Drawing', 'Dumas', 'Education', 'Everything', 'Fantasy', 'Film', 'Finance', 'First', 'Fitness', 'Football', 'Future', 'Games', 'Gandhi', 'Homer', 'Horror', 'Hugo', 'Ibsen', 'Journey', 'Kafka', 'King', 'Lahiri', 'Larsson', 'Learn', 'Literary Fiction', 'Make', 'Manage', 'Marquez', 'Money', 'Mystery', 'Negotiate', 'Painting', 'Philosophy', 'Photography', 'Poetry', 'Production', 'Programming', 'React', 'Redux', 'River', 'Robotics', 'Rowling', 'Satire', 'Science Fiction', 'Shakespeare', 'Singh', 'Swimming', 'Tale', 'Thrun', 'Time', 'Tolstoy', 'Travel', 'Ultimate', 'Virtual Reality', 'Web Development', 'iOS']\r\nfunction SearchBook(props) {\r\n  // let location = useLocation();\r\n  const { books, onShelfUpdate, query, onUpdateQuery, onLabelClick } = props;\r\n  // useLocation can only be used to function not class\r\n  // console.log(location.state);\r\n  return (\r\n    <div className=\"search-books\">\r\n      <div className=\"search-books-bar\">\r\n        <Link to='/'>\r\n          <button className=\"close-search\">Close</button>\r\n        </Link> \r\n        <div className=\"search-books-input-wrapper\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter New Item\"\r\n            value={query}\r\n            onChange={(event) => onUpdateQuery(event.target.value)}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"search-books-results\">\r\n          {books.length === 0 ? (\r\n            <div>\r\n              <h2>Probably try terms:</h2>\r\n              {terms.map((label) => (\r\n                <button className=\"search-label\" onClick={() => onLabelClick(label)}>\r\n                  {label}\r\n                </button>)\r\n              )}\r\n            </div>\r\n            ) : (\r\n            <ol className=\"books-grid\">\r\n              {Object.values(books).map((book)=>(\r\n              <Book key={book.id} book={book} onShelfUpdate={props.onShelfUpdate} />\r\n              ))}\r\n            </ol>\r\n          )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default SearchBook","import React from 'react'\nimport * as BooksAPI from './BooksAPI'\nimport { Routes,Route } from 'react-router-dom';\nimport './App.css'\nimport MainPage from './MainPage';\nimport SearchBook from './SearchBook';\nimport bg from './images/bg.jfif';\n\nclass BooksApp extends React.Component {\n  state = {\n    /**\n     * TODO: Instead of using this state variable to keep track of which page\n     * we're on, use the URL in the browser's address bar. This will ensure that\n     * users can use the browser's back and forward buttons to navigate between\n     * pages, as well as provide a good URL they can bookmark and share.\n     */\n    showSearchPage: false,\n    books: '',\n    query: '',    \n    searchResults: [],\n  }\n\n  componentDidMount() {\n    BooksAPI.getAll().then((data) => this.setState({\n      // name: user.name,\n      // age: user.age\n      books: data\n    }));\n  }\n  addBookButtonClick = () => (\n    this.setState({showSearchPage: true})\n  )\n  backButtonClick = () => (\n    this.setState({showSearchPage: false})\n  )\n\n  updateBookShelf = (book, shelf) => {\n    console.log(book);\n    console.log(shelf);\n    if(book.shelf === shelf)\n      return;\n    BooksAPI.update(book, shelf).then(() => {\n      book.shelf = shelf;\n      this.setState(state => ({\n        books: state.books.filter(b => b.id !== book.id).concat([book])\n      }))\n    }).catch(err => console.log(err))\n  }\n\n  onUpdateQuery = (query) => {\n    // console.log(content)\n    this.setState(() => ({\n      query: query\n    }))\n    if(query) BooksAPI.search(query).then((result) => {\n      this.setState(() => ({\n        searchResults: !result.error ? result : []\n      }));\n    }).catch(err => console.log(err));\n    else this.setState(() => ({searchResults: []}));\n  }\n\n  onLabelClick = (content) => {\n    this.setState(() => ({\n      query: content\n    }))\n    this.onUpdateQuery(content);\n  }\n\n  render() {\n    return (\n      <div className=\"app\" >\n        <Routes>\n          <Route exact path='/' element={\n            <MainPage\n              books={this.state.books} \n              onShelfUpdate={this.updateBookShelf}\n            />\n          }/>\n          <Route exact path='/search' element={\n            <SearchBook\n              books={this.state.searchResults}\n              onShelfUpdate={this.updateBookShelf}\n              query={this.state.query}\n              onUpdateQuery={this.onUpdateQuery}\n              onLabelClick={this.onLabelClick}\n            />\n          }/>\n        </Routes>\n      </div>\n    )\n  }\n}\n\nexport default BooksApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>, document.getElementById('root'))\n"],"sourceRoot":""}